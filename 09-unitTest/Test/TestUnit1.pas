unit TestUnit1;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit
  being tested.

}

interface

uses
  TestFramework, FMX.Graphics, FMX.Dialogs, FMX.Edit, System.Types,
  System.SysUtils,
  System.Variants, FMX.Controls.Presentation, System.UITypes, Unit1, FMX.Types,
  FMX.StdCtrls, FMX.Forms, FMX.Controls, System.Classes;

type
  // Test methods for class TForm1

  TestTForm1 = class(TTestCase)
  strict private
    FForm1: TForm1;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure Testadd;
  end;

implementation

procedure TestTForm1.SetUp;
begin
  FForm1 := TForm1.Create(nil);
  // add nil as parameter if get E2035 not enough actual parameters
end;

procedure TestTForm1.TearDown;
begin
  FForm1.Free;
  FForm1 := nil;
end;

procedure TestTForm1.Testadd;
var
  ReturnValue: Integer;
  y: Integer;
  x: Integer;
begin
  x := 12;
  y := 12;
  // TODO: Setup method call parameters
  ReturnValue := FForm1.add(x, y);
  // TODO: Validate method results

  checknotequals(25, ReturnValue, 'value dont match ' + inttostr(ReturnValue));
  checkequals(24, ReturnValue, 'values match ' + inttostr(ReturnValue));
  assert(ReturnValue = 24, 'value should be 24');
  status('Success!');

end;

initialization

// Register any test cases with the test runner
RegisterTest(TestTForm1.Suite);

end.
